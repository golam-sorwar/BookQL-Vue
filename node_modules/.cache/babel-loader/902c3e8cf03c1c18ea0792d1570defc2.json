{"remainingRequest":"/Users/akib/Documents/Laravel/Research/bookql-vue/node_modules/babel-loader/lib/index.js!/Users/akib/Documents/Laravel/Research/bookql-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/akib/Documents/Laravel/Research/bookql-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/akib/Documents/Laravel/Research/bookql-vue/src/views/AddBook.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/akib/Documents/Laravel/Research/bookql-vue/src/views/AddBook.vue","mtime":1565191798844},{"path":"/Users/akib/Documents/Laravel/Research/bookql-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akib/Documents/Laravel/Research/bookql-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/akib/Documents/Laravel/Research/bookql-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akib/Documents/Laravel/Research/bookql-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.link\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _addBook from \"../graphql/mutations/AddBook.gql\";\nexport default {\n  data: function data() {\n    return {\n      title: \"\",\n      author: \"\",\n      image: \"\",\n      description: \"\",\n      link: \"\",\n      featured: false,\n      category_id: 1\n    };\n  },\n  methods: {\n    addBook: function addBook() {\n      var _this = this;\n\n      this.$apollo.mutate({\n        // Query\n        mutation: _addBook,\n        // Parameters\n        variables: {\n          title: this.title,\n          author: this.author,\n          image: this.image,\n          link: this.link,\n          description: this.description,\n          featured: this.featured,\n          category_id: this.category_id\n        }\n      }).then(function (data) {\n        console.log(data);\n\n        _this.$router.push(\"/\");\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }\n};",{"version":3,"sources":["AddBook.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA,OAAA,QAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,WAAA,EAAA,EAJA;AAKA,MAAA,IAAA,EAAA,EALA;AAMA,MAAA,QAAA,EAAA,KANA;AAOA,MAAA,WAAA,EAAA;AAPA,KAAA;AASA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,WAAA,OAAA,CACA,MADA,CACA;AACA;AACA,QAAA,QAAA,EAAA,QAFA;AAGA;AACA,QAAA,SAAA,EAAA;AACA,UAAA,KAAA,EAAA,KAAA,KADA;AAEA,UAAA,MAAA,EAAA,KAAA,MAFA;AAGA,UAAA,KAAA,EAAA,KAAA,KAHA;AAIA,UAAA,IAAA,EAAA,KAAA,IAJA;AAKA,UAAA,WAAA,EAAA,KAAA,WALA;AAMA,UAAA,QAAA,EAAA,KAAA,QANA;AAOA,UAAA,WAAA,EAAA,KAAA;AAPA;AAJA,OADA,EAeA,IAfA,CAeA,UAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA;;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA,OAlBA,EAmBA,KAnBA,CAmBA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,KAAA;AACA,OArBA;AAsBA;AAxBA;AAZA,CAAA","sourcesContent":["<template>\n  <div class=\"create container mt-12\">\n    <h1 class=\"mb-4\">Create Book</h1>\n    <form action=\"#\" method=\"POST\" @submit.prevent=\"addBook\">\n      <div class=\"form-group\">\n        <label class=\"font-bold mb-2\" for=\"title\">Title</label>\n        <input type=\"text\" name=\"title\" id=\"title\" v-model=\"title\" />\n      </div>\n      <div class=\"form-group\">\n        <label class=\"font-bold mb-2\" for=\"author\">Author</label>\n        <input type=\"text\" name=\"author\" id=\"author\" v-model=\"author\" />\n      </div>\n      <div class=\"form-group\">\n        <label class=\"font-bold mb-2\" for=\"image\">Image</label>\n        <input type=\"text\" name=\"image\" id=\"image\" v-model=\"image\" />\n      </div>\n      <div class=\"form-group\">\n        <label class=\"font-bold mb-2\" for=\"description\">Description</label>\n        <textarea\n          name=\"description\"\n          id=\"description\"\n          cols=\"30\"\n          rows=\"10\"\n          v-model=\"description\"\n        ></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"font-bold mb-2\" for=\"link\">Link</label>\n        <input type=\"text\" name=\"link\" id=\"link\" v-model=\"link\" />\n      </div>\n      <div class=\"form-group\">\n        <label class=\"font-bold mb-2\"\n          ><input\n            type=\"checkbox\"\n            name=\"featured\"\n            v-model=\"featured\"\n            class=\"mr-2\"\n          />Featured</label\n        >\n      </div>\n      <div class=\"form-group\">\n        <ApolloQuery :query=\"require('@/graphql/queries/Categories.gql')\">\n          <template slot-scope=\"{ result: { data, loading }, isLoading }\">\n            <div v-if=\"isLoading\">Loading...</div>\n            <select v-else v-model=\"category_id\">\n              <option\n                v-for=\"category of data.categories\"\n                :key=\"category.id\"\n                :value=\"category.id\"\n              >\n                {{ category.name }}\n              </option>\n            </select>\n          </template>\n        </ApolloQuery>\n      </div>\n\n      <div class=\"form-group\">\n        <button type=\"submit\">Add book</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport addBook from \"../graphql/mutations/AddBook.gql\";\nexport default {\n  data() {\n    return {\n      title: \"\",\n      author: \"\",\n      image: \"\",\n      description: \"\",\n      link: \"\",\n      featured: false,\n      category_id: 1\n    };\n  },\n  methods: {\n    addBook() {\n      this.$apollo\n        .mutate({\n          // Query\n          mutation: addBook,\n          // Parameters\n          variables: {\n            title: this.title,\n            author: this.author,\n            image: this.image,\n            link: this.link,\n            description: this.description,\n            featured: this.featured,\n            category_id: this.category_id\n          }\n        })\n        .then(data => {\n          console.log(data);\n          this.$router.push(\"/\");\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.form-group {\n  margin-bottom: 32px;\n}\ninput[type=\"text\"],\ntextarea {\n  padding: 10px 14px;\n  border: 1px solid lightgray;\n  border-radius: 5px;\n}\nlabel {\n  display: block;\n}\nbutton {\n  padding: 16px;\n  background: #027bff;\n  color: white;\n  border-radius: 5px;\n  font-size: 16px;\n}\n</style>\n"],"sourceRoot":"src/views"}]}